// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: permissions.sql

package sqlc

import (
	"context"
)

const createPermission = `-- name: CreatePermission :one
INSERT INTO permissions (name) VALUES ($1) RETURNING id, name, created_at, updated_at
`

func (q *Queries) CreatePermission(ctx context.Context, name string) (Permission, error) {
	row := q.queryRow(ctx, q.createPermissionStmt, createPermission, name)
	var i Permission
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getPermissionByName = `-- name: GetPermissionByName :one
SELECT id, name, created_at, updated_at FROM permissions WHERE name = $1 LIMIT 1
`

func (q *Queries) GetPermissionByName(ctx context.Context, name string) (Permission, error) {
	row := q.queryRow(ctx, q.getPermissionByNameStmt, getPermissionByName, name)
	var i Permission
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
